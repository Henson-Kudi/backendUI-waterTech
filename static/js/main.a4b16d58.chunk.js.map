{"version":3,"sources":["firbase.js","components/images/logo.png","App.js","index.js"],"names":["app","firebase","initializeApp","db","firestore","App","useState","project","setProject","projects","setProjects","imageUrl","setImageUrl","newProject","setNewProject","wrapperRef","useRef","id","Date","valueOf","toString","handleFileChange","e","a","file","target","files","storageRef","storage","ref","fileRef","child","name","put","getDownloadURL","useEffect","collection","get","projectsList","docs","map","doc","data","fetch","handleChange","value","prev","handleClickOutside","wrap","current","contains","document","addEventListener","removeEventListener","handleSubmit","title","alert","description","projectData","url","set","then","res","handleDelete","delete","className","src","logo","alt","onClick","type","onChange","placeholder","sort","b","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4b16d58.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/storage'\r\n\r\nconst app = firebase.initializeApp({\r\n  \"projectId\": \"water-tech-files-storage\",\r\n  \"appId\": \"1:904994163595:web:502709034d2777cdb93d8e\",\r\n  \"storageBucket\": \"water-tech-files-storage.appspot.com\",\r\n  \"locationId\": \"us-central\",\r\n  \"apiKey\": \"AIzaSyC_hIfGIV63FdKqRRbJXZyGMeYnJquIuQ0\",\r\n  \"authDomain\": \"water-tech-files-storage.firebaseapp.com\",\r\n  \"messagingSenderId\": \"904994163595\"\r\n});\r\n\r\nexport {app as default}","export default __webpack_public_path__ + \"static/media/logo.27956032.png\";","import React, { useState, useEffect, useRef } from 'react';\nimport app from './firbase'\nimport './App.css';\nimport logo from './components/images/logo.png';\n\nconst db = app.firestore()\n\nfunction App() {\n\n  const [project, setProject] = useState({})\n  const [projects, setProjects] = useState([])\n  const [imageUrl, setImageUrl] = useState(null)\n  const [newProject, setNewProject] = useState(false)\n  const wrapperRef = useRef(null)\n\n  const id = (new Date().valueOf()).toString()\n\n  const handleFileChange = async (e)=>{\n    const file = e.target.files[0];\n    const storageRef = app.storage().ref()\n    const fileRef = storageRef.child(file.name)\n    await fileRef.put(file)\n    const imageUrl = await fileRef.getDownloadURL()\n    setImageUrl(imageUrl)\n  }\n\n  useEffect(() => {\n    const fetch = async () => {\n      const projectsList = await db.collection('projects').get()\n      setProjects(projectsList.docs.map(doc => (\n        doc.data()\n      )))\n    }\n\n    fetch()\n  }, [])\n  \n  const handleChange = (e)=>{\n    const {name, value} = e.target\n    setProject(prev => ({\n      ...prev,\n      [name] : value\n    }))\n  }\n\n  useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n\n        return ()=>{\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n    }, [])\n\n    function handleClickOutside(e){\n        const {current : wrap} = wrapperRef;\n        if(wrap && !wrap.contains(e.target)){\n            setNewProject(false)\n        }\n    }\n\n  const handleSubmit = async()=>{\n    if (!project.title) {\n      alert('Please add a project title')\n    }\n    if (project.title) {\n      if (!project.description) {\n        alert('Please Add Project Description')\n      }\n    }\n    if (project.title) {\n      if (project.description) {\n        const projectData = {\n          id: id,\n          title: project.title,\n          description: project.description,\n          url: imageUrl\n        }\n        await db.collection('projects').doc(projectData.id).set(projectData).then(async res =>{\n          const projectsList = await db.collection('projects').get()\n          setProjects(projectsList.docs.map(doc => (\n            doc.data()\n          ))) \n          setProject({})\n          setImageUrl(null)\n          setNewProject(false)\n        })\n      }\n    }\n  }\n\n  const handleDelete = async(project)=>{\n    await db.collection('projects').doc(project.id).delete().then(async res=>{\n      const projectsList = await db.collection('projects').get()\n      setProjects(projectsList.docs.map(doc => (doc.data()\n      )))\n    })\n  }\n\n  return (\n    <>\n      <div className='App'>\n      <div className=\"headerSection\">\n        <div className=\"headImageContainer\">\n          <img src={logo} alt=\"Water Tech Logo\" />\n        </div>\n        <div>\n          <button className=\"btn\" onClick={()=>{setNewProject(true)}}>New Project</button>\n        </div>\n      </div>\n      \n        { newProject &&\n        <div className=\"newProjectForm\" ref={wrapperRef}>\n          <div>\n            <input type=\"text\" name=\"title\" id=\"title\" value={project.title} onChange={handleChange} placeholder='Enter project title' />\n          </div>\n          <div>\n            <textarea name=\"description\" id=\"description\" value={project.description} onChange={handleChange} placeholder='Enter project description'></textarea>\n          </div>\n            <div>\n              <input type=\"file\" name=\"project\" onChange={handleFileChange} />\n            </div>\n\n            <div className='image-container'>\n              {\n                imageUrl ? <img src={imageUrl} alt={project.title} /> : <button className='btnSubmitt'><span></span></button>\n              }\n            </div>\n            <div className='submitOptions'>\n                <div>\n                  <button className='btnCancel btn' onClick={()=>{\n                    setNewProject(false);\n                  }}>Cancel</button>\n                </div>\n              \n              <div>\n                {\n                  imageUrl &&  <button className=\"btnSubmit btn\" onClick={handleSubmit}> Add Project </button>\n                }\n              </div>\n            </div>\n        </div>\n        }\n\n        \n      </div>\n\n      <div className='projects'>\n        {\n          projects?.sort((a, b)=> b.id - a.id).map(project => (\n            <div className=\"elementGrid\">\n              <div className=\"imageContainer\">\n                <img src={project.url} alt=\"\" />\n              </div>\n              \n              <p className=\"imageTitle\">\n                {project.title}\n                <i className=\"fas fa-trash\" onClick={()=>{handleDelete(project)}}></i>\n              </p>\n            </div>\n          ))\n        }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}